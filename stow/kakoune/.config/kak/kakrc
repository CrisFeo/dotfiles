colorscheme simple

set-option global ui_options ncurses_assistant=cat

set-option global tabstop 2
set-option global indentwidth 2
set-option global aligntab false

set-option global modelinefmt '%sh{
	modified=$([ $kak_modified = "true" ] && echo "+ ")
	left="$kak_bufname"
	right="$modified$kak_cursor_line:$kak_cursor_char_column "
	printf "%s" "$left"
  printf "%-$(($kak_window_width - ${#left} - ${#right} - 1))s"
	printf "%s" "$right"
}'

def fzf-buffer -docstring 'jump to buffer using fzf' -allow-override %{%sh{
	tmp=$(mktemp -d -t fzf-temp-XXXXXXXX)
  in="$tmp/in"
  out="$tmp/out"
	mkfifo "$in" "$out"
	(printf '%s\n' "$kak_buflist" | tr : '\n' > $in) > /dev/null 2>&1 < /dev/null &
  (tmux new-window "fzf < $in > $out") > /dev/null 2>&1 < /dev/null &
  RESULT=$(cat "$out")
  if [ -n "$RESULT" ]; then
    CMD=$(printf 'eval -client %s buffer %s\n' "$kak_client" "$RESULT")
    kak -p "$kak_session" <<< "$CMD"
  fi
}}

def fzf-file -docstring 'jump to file using fzf' -allow-override %{%sh{
	tmp=$(mktemp -d -t fzf-temp-XXXXXXXX)
  in="$tmp/in"
  out="$tmp/out"
	mkfifo "$in" "$out"
  (ag --nogroup --nocolor --files-with-matches '' > $in) > /dev/null 2>&1 < /dev/null &
  (tmux new-window "fzf < $in > $out") > /dev/null 2>&1 < /dev/null &
  RESULT=$(cat "$out")
  if [ -n "$RESULT" ]; then
    CMD=$(printf 'eval -client %s edit %s\n' "$kak_client" "$RESULT")
    kak -p "$kak_session" <<< "$CMD"
  fi
}}

def fzf-line -docstring 'jump to line using fzf' -allow-override %{%sh{
	tmp=$(mktemp -d -t fzf-temp-XXXXXXXX)
  in="$tmp/in"
  out="$tmp/out"
	mkfifo "$in" "$out"
  (ag --nogroup --nocolor '^.*$' > $in) > /dev/null 2>&1 < /dev/null &
  (tmux new-window "fzf < $in > $out") > /dev/null 2>&1 < /dev/null &
  RESULT=$(cat "$out")
  if [ -n "$RESULT" ]; then
  	F=$(cut -d ':' -f 1 <<< "$RESULT")
  	L=$(cut -d ':' -f 2 <<< "$RESULT")
    CMD=$(printf 'eval -client %s edit %s %s\n' "$kak_client" "$F" "$L")
    kak -p "$kak_session" <<< "$CMD"
  fi
}}

map global user b -docstring 'jump to buffer' :fzf-buffer<ret>
map global user f -docstring 'jump to file' :fzf-file<ret>
map global user l -docstring 'jump to line' :fzf-line<ret>

